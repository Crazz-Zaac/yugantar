name: yugantar
services:
  db:
    image: postgres:latest
    container_name: yugantar-db
    env_file:
      - ../backend/.env
    ports:
      - "5432:5432"
    # secrets:
    #   - db_password
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - yugantar-network
    restart: unless-stopped
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    env_file:
      - ../backend/.env
    ports:
      - "8080:80"  
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - yugantar-network
    restart: unless-stopped
  backend:
    image: backend:v1
    build:
      context: ..
      dockerfile: docker/Dockerfile.backend
    container_name: yugantar-backend
    env_file:
      - ../backend/.env
    ports:
      - "8001:8000"
    depends_on:
      - db
    networks:
      - yugantar-network
    restart: unless-stopped
  
  # frontend:
  #   image: frontend:v1
  #   build:
  #     context: ../frontend
  #     dockerfile: ../docker/Dockerfile.frontend
  #   container_name: yugantar-frontend
  #   environment:
  #     REACT_APP_API_URL: http://localhost:8000  # Adjust if backend is hosted elsewhere
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - backend
  #   networks:
  #     - yugantar-network
  #   restart: unless-stopped
    
  
# secrets:
#   db_password:
#     file: ./secrets/db_password.txt  # password for PostgreSQL
#   pgadmin_password:
#     file: ./secrets/pgadmin_password.txt  # password for PgAdmin login

volumes:
  db_data:
  pgadmin_data:

networks:
  yugantar-network:
    driver: bridge